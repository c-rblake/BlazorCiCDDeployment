@page "/"

<h1>Machine Park</h1>

@if (MachineList.Machines == null)
{
    <p>hej</p>
}
else
{


<table>
    <tr>
        <th>Machine Name</th>
        <th>Machine ID</th>
        <th>Machine Status</th>
        <th>Details</th>
    </tr>
    @foreach (var machine in Machines)
    {
        <tr>
            <td>@machine.Name</td>
            <td>@machine.Id</td>
            <td class="@(machine.Status ? "online" : "")">
                @(machine.Status ? "Online" : "Offline") <button class="ml-2" @onclick="() => ChangeStatus(machine)">Change</button>
            </td>
            <td>
                <NavLink class="nav-link" href="@($"details/{machine.Name}")">
                    <span class="oi oi-list-rich" aria-hidden="true"></span> Details
                </NavLink>
            </td>
        </tr>
    }

</table>

@*<ListedMachines MachineList="MachineList"></ListedMachines>*@


}

    @*https://stackoverflow.com/questions/63683648/blazor-css-not-loading
        "profiles": {
            "IIS Express": {
                "commandName": "IISExpress",
      "launchBrowser": true,
      "environmentVariables": {
                    "ASPNETCORE_ENVIRONMENT": "Local"
      }
            },
I switched local back to development which fixed the issue.*@


@code{
    //Null reference issues
    public MachineList MachineList { get; set; } = new MachineList();
    public List<Machine> Machines { get; set; } = new List<Machine>();
    //Cors

    protected override async Task OnInitializedAsync()
    {

        MachineList = await httpClient.GetFromJsonAsync<MachineList>("/api/machines?code=vH5volBxoB8OhN3Dx/3FMetNk4xHuaX4MUsiblM2JUsDyJMMD2r7cQ==");
        //System.Threading.Thread.Sleep(2000);
        if (MachineList.Machines.Count > 2)
        {
            Machines = MachineList.Machines;
        }
        else
        {
            Machines = machineList.InitalizeMachines();
        }


        //Machines = await httpClient.GetFromJsonAsync<List<Machine>>("api/machines");
        //var data = await httpClient.GetFromJsonAsync<JsonElement>("api/machines?code=vH5volBxoB8OhN3Dx/3FMetNk4xHuaX4MUsiblM2JUsDyJMMD2r7cQ=="); //The API dto is different from my model.

        //    dynamic data = JsonConvert.DeserializeObject(requestBody);

        //
    }
    public void ChangeStatus(Machine machine)
    {
        machine.Status = !machine.Status;
        machine.Log.Add($"{machine.Status}, {DateTime.Now}");
        StateHasChanged();
    }




}

